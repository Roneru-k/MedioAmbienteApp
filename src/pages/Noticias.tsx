import {
  IonContent,
  IonHeader,
  IonPage,
  IonTitle,
  IonToolbar,
  IonCard,
  IonCardHeader,
  IonCardTitle,
  IonCardContent,
  IonItem,
  IonLabel,
  IonThumbnail,
  IonImg,
  IonButton,
  IonIcon,
  IonChip,
  IonSearchbar,
  IonList,
  IonSpinner,
  IonText,
  IonBadge,
  IonModal,
  IonButtons,
  IonGrid,
  IonRow,
  IonCol
} from '@ionic/react';
import {
  newspaperOutline,
  timeOutline,
  calendarOutline,
  searchOutline,
  closeOutline,
  shareOutline,
  bookmarkOutline,
  eyeOutline,
  informationCircleOutline
} from 'ionicons/icons';
import { useState, useEffect } from 'react';
import { getNoticias } from '../utils/api';
import './Page.css';

interface Noticia {
  id: string;
  titulo: string;
  resumen: string;
  contenido: string;
  imagen: string;
  fecha: string;
  fecha_creacion: string;
}

const Noticias: React.FC = () => {
  const [noticias, setNoticias] = useState<Noticia[]>([]);
  const [filteredNoticias, setFilteredNoticias] = useState<Noticia[]>([]);
  const [searchTerm, setSearchTerm] = useState<string>('');
  const [loading, setLoading] = useState(true);
  const [selectedNoticia, setSelectedNoticia] = useState<Noticia | null>(null);
  const [error, setError] = useState<string>('');

  useEffect(() => {
    loadNoticias();
  }, []);

  useEffect(() => {
    filterNoticias();
  }, [searchTerm, noticias]);

  const loadNoticias = async () => {
    try {
      setLoading(true);
      setError('');
      console.log('üì∞ Cargando noticias...');
      
      const response = await getNoticias();
      console.log('‚úÖ Noticias cargadas exitosamente:', response.data);
      setNoticias(response.data);
      setFilteredNoticias(response.data);
    } catch (err: any) {
      console.error('‚ùå Error cargando noticias:', err);
      
      // Si es error de red, usar datos mock
      if (err.message === 'NETWORK_ERROR' || !err.response) {
        console.log('üåê Usando datos mock para noticias');
        setError('No se pudo conectar con el servidor. Mostrando datos de demostraci√≥n.');
      } else {
        setError('Error al cargar las noticias. Por favor, intenta de nuevo.');
      }
      
      // Datos mock para pruebas cuando la API no est√° disponible
      const mockNoticias = [
        {
          id: "000001",
          titulo: "Ministerio de Medio Ambiente lanza campa√±a de reforestaci√≥n nacional",
          resumen: "Se plantar√°n m√°s de 1 mill√≥n de √°rboles en todo el pa√≠s durante 2025.",
          contenido: "El Ministerio de Medio Ambiente y Recursos Naturales anunci√≥ hoy el lanzamiento de la campa√±a nacional de reforestaci√≥n m√°s ambiciosa de la historia del pa√≠s. La iniciativa busca plantar m√°s de 1 mill√≥n de √°rboles en todas las provincias durante el a√±o 2025, con el objetivo de recuperar la cobertura boscosa y combatir el cambio clim√°tico.\n\nEsta campa√±a forma parte del Plan Nacional de Desarrollo Sostenible y contar√° con la participaci√≥n de voluntarios, organizaciones ambientales, empresas privadas y la comunidad en general. Los √°rboles ser√°n plantados en √°reas urbanas, rurales y en las principales cuencas hidrogr√°ficas del pa√≠s.\n\nEl ministro destac√≥ que esta iniciativa no solo ayudar√° a combatir el cambio clim√°tico, sino que tambi√©n mejorar√° la calidad del aire, reducir√° la erosi√≥n del suelo y crear√° espacios m√°s saludables para todos los dominicanos.",
          imagen: "https://via.placeholder.com/400x200/4CAF50/FFFFFF?text=Reforestaci√≥n+Nacional",
          fecha: "2025-01-15 14:30:00",
          fecha_creacion: "2025-01-15 10:00:00"
        },
        {
          id: "000002",
          titulo: "Nuevas medidas para proteger especies marinas en peligro",
          resumen: "Implementaci√≥n de regulaciones estrictas para la conservaci√≥n de la biodiversidad marina.",
          contenido: "El gobierno dominicano implementar√° nuevas medidas de protecci√≥n para las especies marinas en peligro de extinci√≥n. Estas medidas incluyen la creaci√≥n de nuevas √°reas marinas protegidas y la regulaci√≥n de actividades pesqueras en zonas sensibles.\n\nLas nuevas regulaciones proteger√°n especies como las tortugas marinas, los manat√≠es, los corales y los peces de arrecife, que son fundamentales para el ecosistema marino del Caribe. Tambi√©n se establecer√°n per√≠odos de veda m√°s estrictos y se implementar√°n sistemas de monitoreo satelital para las embarcaciones pesqueras.\n\nEsta iniciativa se desarrolla en colaboraci√≥n con organizaciones internacionales de conservaci√≥n marina y representa un paso importante hacia la protecci√≥n de nuestros oc√©anos y la sostenibilidad de la pesca en la regi√≥n.",
          imagen: "https://via.placeholder.com/400x200/2196F3/FFFFFF?text=Protecci√≥n+Marina",
          fecha: "2025-01-14 15:30:00",
          fecha_creacion: "2025-01-14 12:00:00"
        },
        {
          id: "000003",
          titulo: "Programa de reciclaje comunitario en Santiago",
          resumen: "Iniciativa pionera para promover la separaci√≥n de residuos y el reciclaje en hogares.",
          contenido: "La ciudad de Santiago ser√° pionera en la implementaci√≥n de un programa integral de reciclaje comunitario. Este programa incluir√° la instalaci√≥n de contenedores especializados en puntos estrat√©gicos de la ciudad, campa√±as de educaci√≥n ambiental y la participaci√≥n activa de las comunidades.\n\nEl programa se desarrollar√° en fases, comenzando con la separaci√≥n de pl√°sticos, papel y cart√≥n, y expandi√©ndose posteriormente a otros materiales como vidrio, metal y residuos org√°nicos. Cada hogar recibir√° contenedores de separaci√≥n y material educativo sobre las mejores pr√°cticas de reciclaje.\n\nEsta iniciativa no solo ayudar√° a reducir la cantidad de residuos que llegan a los vertederos, sino que tambi√©n crear√° empleos verdes y promover√° una cultura de sostenibilidad en la comunidad.",
          imagen: "https://via.placeholder.com/400x200/FF9800/FFFFFF?text=Reciclaje+Comunitario",
          fecha: "2025-01-13 16:45:00",
          fecha_creacion: "2025-01-13 13:30:00"
        }
      ];
      
      setNoticias(mockNoticias);
      setFilteredNoticias(mockNoticias);
    } finally {
      setLoading(false);
    }
  };

  const filterNoticias = () => {
    if (searchTerm.trim() === '') {
      setFilteredNoticias(noticias);
    } else {
      const filtered = noticias.filter(noticia =>
        noticia.titulo.toLowerCase().includes(searchTerm.toLowerCase()) ||
        noticia.resumen.toLowerCase().includes(searchTerm.toLowerCase()) ||
        noticia.contenido.toLowerCase().includes(searchTerm.toLowerCase())
      );
      setFilteredNoticias(filtered);
    }
  };

  const formatDate = (dateString: string) => {
    const date = new Date(dateString);
    return date.toLocaleDateString('es-DO', {
      year: 'numeric',
      month: 'long',
      day: 'numeric',
      hour: '2-digit',
      minute: '2-digit'
    });
  };

  const formatDateShort = (dateString: string) => {
    const date = new Date(dateString);
    return date.toLocaleDateString('es-DO', {
      month: 'short',
      day: 'numeric'
    });
  };

  const handleShare = (noticia: Noticia) => {
    if (navigator.share) {
      navigator.share({
        title: noticia.titulo,
        text: noticia.resumen,
        url: window.location.href
      });
    } else {
      // Fallback para navegadores que no soportan Web Share API
      navigator.clipboard.writeText(`${noticia.titulo}\n${noticia.resumen}`);
      alert('Enlace copiado al portapapeles');
    }
  };

  const getTimeAgo = (dateString: string) => {
    const date = new Date(dateString);
    const now = new Date();
    const diffInHours = Math.floor((now.getTime() - date.getTime()) / (1000 * 60 * 60));
    
    if (diffInHours < 1) return 'Hace menos de 1 hora';
    if (diffInHours < 24) return `Hace ${diffInHours} horas`;
    if (diffInHours < 48) return 'Hace 1 d√≠a';
    return formatDateShort(dateString);
  };

  return (
    <IonPage>
      <IonHeader>
        <IonToolbar>
          <IonTitle>Noticias Ambientales</IonTitle>
        </IonToolbar>
      </IonHeader>
      
      <IonContent fullscreen>
        {/* Barra de b√∫squeda */}
        <IonSearchbar
          value={searchTerm}
          onIonInput={(e) => setSearchTerm(e.detail.value!)}
          placeholder="Buscar noticias..."
          showClearButton="focus"
        />
        
        {/* Mensaje de error si existe */}
        {error && (
          <IonCard color="warning">
            <IonCardContent>
              <IonItem lines="none">
                <IonIcon icon={informationCircleOutline} slot="start" color="warning" />
                <IonLabel>
                  <h3>Informaci√≥n</h3>
                  <p>{error}</p>
                </IonLabel>
              </IonItem>
            </IonCardContent>
          </IonCard>
        )}
        
        {/* Loading spinner */}
        {loading && (
          <div style={{ textAlign: 'center', padding: '2rem' }}>
            <IonSpinner name="crescent" />
            <p>Cargando noticias...</p>
          </div>
        )}
        
        {/* Lista de noticias */}
        {!loading && (
          <IonList>
            {filteredNoticias.map((noticia) => (
              <IonCard key={noticia.id} button onClick={() => setSelectedNoticia(noticia)}>
                <IonCardHeader>
                  <IonCardTitle>{noticia.titulo}</IonCardTitle>
                </IonCardHeader>
                
                <IonCardContent>
                  <IonItem lines="none">
                    <IonThumbnail slot="start">
                      <IonImg src={noticia.imagen} alt={noticia.titulo} />
                    </IonThumbnail>
                    <IonLabel>
                      <p>{noticia.resumen}</p>
                      <div style={{ marginTop: '8px' }}>
                        <IonChip color="primary" size="small">
                          <IonIcon icon={timeOutline} />
                          <IonLabel>{new Date(noticia.fecha).toLocaleDateString()}</IonLabel>
                        </IonChip>
                      </div>
                    </IonLabel>
                  </IonItem>
                </IonCardContent>
              </IonCard>
            ))}
          </IonList>
        )}
        
        {/* Mensaje si no hay noticias */}
        {!loading && filteredNoticias.length === 0 && (
          <div style={{ textAlign: 'center', padding: '2rem' }}>
            <IonIcon icon={newspaperOutline} style={{ fontSize: '3rem', color: '#ccc' }} />
            <p>No se encontraron noticias</p>
          </div>
        )}
        
        {/* Modal para ver noticia completa */}
        <IonModal isOpen={!!selectedNoticia} onDidDismiss={() => setSelectedNoticia(null)}>
          {selectedNoticia && (
            <>
              <IonHeader>
                <IonToolbar>
                  <IonTitle>Noticia</IonTitle>
                  <IonButtons slot="end">
                    <IonButton onClick={() => setSelectedNoticia(null)}>
                      <IonIcon icon={closeOutline} />
                    </IonButton>
                  </IonButtons>
                </IonToolbar>
              </IonHeader>
              
              <IonContent>
                <IonCard>
                  <IonImg src={selectedNoticia.imagen} alt={selectedNoticia.titulo} />
                  <IonCardHeader>
                    <IonCardTitle>{selectedNoticia.titulo}</IonCardTitle>
                    <IonChip color="primary">
                      <IonIcon icon={calendarOutline} />
                      <IonLabel>{new Date(selectedNoticia.fecha).toLocaleDateString()}</IonLabel>
                    </IonChip>
                  </IonCardHeader>
                  
                  <IonCardContent>
                    <IonText>
                      <div style={{ whiteSpace: 'pre-line' }}>
                        {selectedNoticia.contenido}
                      </div>
                    </IonText>
                  </IonCardContent>
                </IonCard>
              </IonContent>
            </>
          )}
        </IonModal>
      </IonContent>
    </IonPage>
  );
};

export default Noticias;
